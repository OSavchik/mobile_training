import io.appium.java_client.AppiumDriver;import io.appium.java_client.android.AndroidDriver;import org.junit.After;import org.junit.Assert;import org.junit.Before;import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebElement;import org.openqa.selenium.remote.DesiredCapabilities;import org.openqa.selenium.support.ui.ExpectedConditions;import org.openqa.selenium.support.ui.WebDriverWait;import java.net.URL;import java.util.ArrayList;import java.util.Iterator;import java.util.List;public class FirstTest {    private AppiumDriver driver;    @Before    public void setUp() throws Exception{        DesiredCapabilities capabilities = new DesiredCapabilities();        capabilities.setCapability("platformName","Android");        capabilities.setCapability("deviceName","Example");        capabilities.setCapability("platformVersion","10.0");        capabilities.setCapability("appium:automationName","uiautomator2");        capabilities.setCapability("appium:appPackage","org.wikipedia");        capabilities.setCapability("appium:appActivity","org.wikipedia.main.MainActivity");        capabilities.setCapability("app","C:\\JavaAppiumAutomation_Project\\JavaAppiumAutomation_Project\\apks\\org.wikipedia.apk");        driver = new AndroidDriver(new URL("http://127.0.0.1:4723/"), capabilities);    }    @After    public void tearDown(){        if (driver != null) {            driver.quit();        }        driver = null;    }    @Test    public void firstTest(){        WaitForElementAndClick(By.xpath("//android.widget.LinearLayout[(@resource-id='org.wikipedia:id/search_container')]"),                "Cannot find Search Wikipedia input",                5);        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        WaitForElementPresent(                By.xpath("//android.widget.TextView[@resource-id='org.wikipedia:id/page_list_item_description' and @text='Object-oriented programming language']"),                "Cannot find 'Object-oriented programming language' topic searching by 'Java'",                15        );    }    @Test    public void testCancelSearch(){        WaitForElementAndClick(                By.id("org.wikipedia:id/search_container"),                "Cannot find 'Search Wikipedia' input",                5        );        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        WaitForElementAndClear(                By.id("org.wikipedia:id/search_src_text"),                "Cannot find search field",                5        );        WaitForElementAndClick(                By.id("org.wikipedia:id/search_close_btn"),                "Cannot find 'X' to cancel search",                5        );        WaitForElementNotPresent(                By.id("org.wikipedia:id/search_close_btn"),                "'X'still present on the page",                5        );    }    @Test    public void testCompareArticleTitle(){        WaitForElementAndClick(By.xpath("//android.widget.LinearLayout[(@resource-id='org.wikipedia:id/search_container')]"),                "Cannot find Search Wikipedia input",                5);        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        WaitForElementAndClick(By.xpath("//android.widget.TextView[@resource-id='org.wikipedia:id/page_list_item_description' and @text='Object-oriented programming language']"),                "Cannot find Search Wikipedia input",                5);        WebElement  title_element = WaitForElementPresent(                By.id("org.wikipedia:id/view_page_title_text"),                "Cannot find article title",                15                );        String article_title = title_element.getAttribute("text");        Assert.assertEquals(                "We see unexpected title",                "Java (programming language)",                article_title        );    }    @Test    public void testSearchWiki_Ex2(){        WaitForElementAndClick(By.xpath("//android.widget.Button[@resource-id='org.wikipedia:id/fragment_onboarding_skip_button']"),                "Cannot Skip",                5);        WaitForElementAndClick(By.xpath("//androidx.cardview.widget.CardView[@resource-id='org.wikipedia:id/search_container']"),                "Cannot find Search Wikipedia input",                5);        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        if (assertElementHasText(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java")){            WaitForElementAndClick(By.xpath("\t\n" +                            "//androidx.recyclerview.widget.RecyclerView[@resource-id='org.wikipedia:id/search_results_list']/android.view.ViewGroup[2]"),                    "Cannot find Search Wikipedia input",                    5);        }    }    @Test    public void testSearchWikiList_Ex3(){        WaitForElementAndClick(By.xpath("//android.widget.Button[@resource-id='org.wikipedia:id/fragment_onboarding_skip_button']"),                "Cannot Skip",                5);        WaitForElementAndClick(By.xpath("//androidx.cardview.widget.CardView[@resource-id='org.wikipedia:id/search_container']"),                "Cannot find Search Wikipedia input",                5);        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        int i_count = GetCountElementList(By.id("org.wikipedia:id/page_list_item_title"));        if (i_count > 0) {            WaitForElementAndClick(                    By.id("org.wikipedia:id/search_close_btn"),                    "Cannot find 'X' to cancel search",                    5            );            i_count = GetCountElementList(By.id("org.wikipedia:id/page_list_item_title"));            if (i_count == 0) System.out.println("list items not found");            else System.out.println("list items found and not reset");        }    }    @Test    public void testSearchWikiListAndSearchText_Ex4(){        WaitForElementAndClick(By.xpath("//android.widget.Button[@resource-id='org.wikipedia:id/fragment_onboarding_skip_button']"),                "Cannot Skip",                5);        WaitForElementAndClick(By.xpath("//androidx.cardview.widget.CardView[@resource-id='org.wikipedia:id/search_container']"),                "Cannot find Search Wikipedia input",                5);        WaitForElementAndSendKeys(By.xpath("//android.widget.EditText[@resource-id='org.wikipedia:id/search_src_text']"),                "Java",                "Cannot find search input",                5);        GetSearchNameListElement(By.id("org.wikipedia:id/page_list_item_title"), "Java");    }    private WebElement WaitForElementPresent(By by, String error_message, long timeoutInSeconds){        WebDriverWait wait = new WebDriverWait(driver, timeoutInSeconds);        wait.withMessage(error_message + "\n");        return wait.until(ExpectedConditions.presenceOfElementLocated(by));    }    private WebElement WaitForElementPresent(By by, String error_message){        return WaitForElementPresent(by, error_message, 5);    }    private WebElement WaitForElementAndClick(By by, String error_message, long timeoutInSeconds){        WebElement element = WaitForElementPresent(by, error_message, 5);        element.click();        return element;    }    private WebElement WaitForElementAndSendKeys(By by, String value, String error_message, long timeoutInSeconds){        WebElement element = WaitForElementPresent(by, error_message, 5);        element.sendKeys(value);        return element;    }    private boolean WaitForElementNotPresent(By by, String error_message, long timeoutInSeconds){        WebDriverWait wait = new WebDriverWait(driver, timeoutInSeconds);        wait.withMessage(error_message + "\n");        return wait.until(ExpectedConditions.invisibilityOfElementLocated(by));    }    private WebElement WaitForElementAndClear(By by, String error_message, long timeoutInSeconds){        WebElement element = WaitForElementPresent(by, error_message, timeoutInSeconds);        element.clear();        return element;    }    private boolean assertElementHasText(By by, String s_text){        boolean b_Search_Text = true;        try {            WebElement element = driver.findElement(by);            String s_text_element = element.getText();            if (s_text_element.contains(s_text)) {                System.out.println("The element at this locator contains text " + s_text);                System.out.println("OK");            } else {                System.out.println("The element at this locator does not contains text " + s_text);                b_Search_Text = false;            }        }        catch (Exception e)        {            b_Search_Text = false;            System.out.println(e.getMessage());        }        return b_Search_Text;    }    private int GetCountElementList(By by){        int i_count_elements = 0;        try {            WebElement element = driver.findElement(by);            String s_text_element = element.getText();            List <WebElement> childrenElements   = driver.findElements(by);            i_count_elements = childrenElements.size();        }        catch (Exception e)        {            System.out.println(e.getMessage());        }        return i_count_elements;    }    private int GetSearchNameListElement(By by, String s_text){        try {            WebElement element = driver.findElement(by);            String s_text_element = element.getText();            List <WebElement> childrenElements   = driver.findElements(by);            int count = 0;            for(int i=0; i < childrenElements.size(); i++) {                String s_TextElement = childrenElements.get(i).getText() ;                if (s_TextElement.contains(s_text)) {                    System.out.println("Element " + s_TextElement +" contains text " + s_text);                } else {                    System.out.println("Element " + s_TextElement +"does not contains text " + s_text);                }            }        }        catch (Exception e)        {            System.out.println(e.getMessage());        }        return 0;    }}